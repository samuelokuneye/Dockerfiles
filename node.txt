node
{
def mavenHome = tool name: "maven3.6.3"
    
    stage("CodeClone")
    {
       git credentialsId: 'gitCredentials', url: 'https://github.com/samuelokuneye/maven-web-app.git'
    }
    stage("CreatePackage")
    {
        sh "${mavenHome}/bin/mvn clean package"
    }
    
    stage('CodeQualityReports')
    {
         //sh "${mavenHome}/bin/mvn sonar:sonar"
    }
    stage('UploadBuildArtifacts')
     {
        sh "${mavenHome}/bin/mvn deploy"
    }
    stage('Deploy2Tomcat')
    {
       deploy adapters: [tomcat9(credentialsId: 'TomcatCredentials', path: '', url: 'http://34.239.176.96:8080/')], contextPath: null, war: '**/maven-web-app.war'
    }
    stage('BuildDockerImage')
     {
        //sh "docker stop myapp"
        //sh "docker rm -f myapp"
        sh "docker rmi -f samokuneye/maven-web-app"
        sh "docker build -t samokuneye/maven-web-app ."
    }
    stage('Push2DockerHub')
     {
    withCredentials([string(credentialsId: 'DockerHubPwd', variable: 'DockerHubPwd')]) {
        sh "docker login -u samokuneye -p $DockerHubPwd"
}
   } 
        sh "docker push samokuneye/maven-web-app"
    }
    stage('DeployAppInDockerContainer')
     {
        sh "docker run -d -p 8888:8080 --name myapp samokuneye/maven-web-app"
    }
    stage('Email notification')
    {
emailext body: '''
Build Status
Sam O
recipientProviders: [developers()], subject: \'Build status\', to: \'samuel_okuneye@yahoo.com\''''  
    }